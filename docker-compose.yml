version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel_app_pg
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    networks:
      - laravel
    depends_on:
      - postgres
      - redis
    entrypoint: |
      sh -c "chown -R www-data:www-data storage && php-fpm"

  composer:
    image: composer:latest
    container_name: laravel_composer_pg
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    networks:
      - laravel
    # entrypoint: ['composer', '--ignore-platform-reqs']
    # user: "1000:1000"

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx_pg
    ports:
      - "8083:80"
    volumes:
      - ./app:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  postgres:
    image: postgres:16
    container_name: laravel_postgres
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    ports:
      - "54320:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - laravel


  # mysql:
  #   image: mysql:8
  #   container_name: laravel_mysql
  #   environment:
  #     MYSQL_DATABASE: laravel
  #     MYSQL_USER: laravel
  #     MYSQL_PASSWORD: secret
  #     MYSQL_ROOT_PASSWORD: root
  #   ports:
  #     - "33060:3306"
  #   volumes:
  #     - dbdata:/var/lib/mysql
  #     - ./docker/mysql/my.cnf:/etc/mysql/my.cnf # ðŸ‘ˆ Mount my.cnf
  #   networks:
  #     - laravel


  redis:
    image: redis:alpine
    container_name: laravel_redis_pg
    ports:
      - "63793:6379"
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf # ðŸ‘ˆ Mount redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - laravel

networks:
  laravel:

volumes:
  pgdata:
